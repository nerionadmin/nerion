// lib/memory.ts — VERSION MINIMALE (short uniquement)

import { createClient } from "@supabase/supabase-js";

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!
);

type MemoryRole = "user" | "assistant";

/**
 * Stocke un message en mémoire courte (short).
 */
export async function storeInShort(
  userId: string,
  role: MemoryRole,
  content: string
) {
  const { error } = await supabase.from("memories").insert({
    user_id: userId,
    role,
    content,
    layer: "short",
  });

  if (error) {
    console.error("❌ Échec insertion memory short", error);
    throw error;
  }
}

/**
 * Récupère les 20 derniers messages short (ordre chronologique).
 */
export async function getRecentShortMemories(userId: string) {
  const { data, error } = await supabase
    .from("memories")
    .select("role, content")
    .eq("user_id", userId)
    .eq("layer", "short")
    .order("created_at", { ascending: true })
    .limit(20);

  if (error) {
    console.error("❌ Erreur lecture memory short", error);
    return [];
  }

  return data || [];
}
